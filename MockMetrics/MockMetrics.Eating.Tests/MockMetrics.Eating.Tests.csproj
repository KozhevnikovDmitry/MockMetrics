<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\JetBrains.ReSharper.SDK.Tests.8.1.555\build\JetBrains.ReSharper.SDK.Tests.Props" Condition="Exists('..\packages\JetBrains.ReSharper.SDK.Tests.8.1.555\build\JetBrains.ReSharper.SDK.Tests.Props')" />
  <Import Project="..\packages\JetBrains.ReSharper.SDK.8.1.555\build\JetBrains.ReSharper.SDK.Props" Condition="Exists('..\packages\JetBrains.ReSharper.SDK.8.1.555\build\JetBrains.ReSharper.SDK.Props')" />
  <Import Project="..\packages\JetBrains.ReSharper.SDK.8.1.555\build\JetBrains.ReSharper.SDK.Targets" Condition="Exists('..\packages\JetBrains.ReSharper.SDK.8.1.555\build\JetBrains.ReSharper.SDK.Targets')" />
  <PropertyGroup>
    <ReSharperSdkMode>Tests</ReSharperSdkMode>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7DA017CC-A6DC-4B9C-8105-632D331A515A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MockMetrics.Eating.Tests</RootNamespace>
    <AssemblyName>MockMetrics.Eating.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>JET_MODE_ASSERT;DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="HaveBox">
      <HintPath>..\packages\HaveBox.1.6.1\lib\net45\HaveBox.dll</HintPath>
    </Reference>
    <Reference Include="Moq">
      <HintPath>..\packages\Moq.4.2.1312.1622\lib\net40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="PresentationCore" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="EaterConfigTests.cs" />
    <Compile Include="Expression\AnonymousMethodExpressionEaterTests.cs" />
    <Compile Include="Expression\AnonymousObjectCreationExpressionEaterTests.cs" />
    <Compile Include="Expression\ArgumentsEaterTests.cs" />
    <Compile Include="Expression\ArrayCreationExpressionEaterTests.cs" />
    <Compile Include="Expression\AsExpressionEaterTests.cs" />
    <Compile Include="Expression\AssignmentExpressionEaterTests.cs" />
    <Compile Include="Expression\AwaitExpressionEaterTests.cs" />
    <Compile Include="Expression\BinaryExpressionEaterTests.cs" />
    <Compile Include="Expression\CastExpressionEaterTests.cs" />
    <Compile Include="Expression\ConditionalTernaryExpressionEaterTests.cs" />
    <Compile Include="Expression\DefaultExpressionEaterTests.cs" />
    <Compile Include="Expression\ElementAccessExpressionEaterTests.cs" />
    <Compile Include="Expression\InvocationExpressionEaterTests.cs" />
    <Compile Include="Expression\InvocationStuffEaterTests.cs" />
    <Compile Include="Expression\IsExpressionEaterTests.cs" />
    <Compile Include="Expression\LambdaExpressionEaterTests.cs" />
    <Compile Include="Expression\LiteralExpressionEaterTests.cs" />
    <Compile Include="Expression\ObjectCreationExpressionEaterTests.cs" />
    <Compile Include="Expression\ParenthesizedExpressionEaterTests.cs" />
    <Compile Include="Expression\ParentReferenceEaterTests.cs" />
    <Compile Include="Expression\PostfixOperatorExpressionEaterTests.cs" />
    <Compile Include="Expression\PrefixOperatorExpressionEaterTests.cs" />
    <Compile Include="Expression\ReferenceEatHelperTests.cs" />
    <Compile Include="Expression\ReferenceExpressionEaterTests.cs" />
    <Compile Include="Expression\TypeofExpressionEaterTests.cs" />
    <Compile Include="Expression\UnaryOperatorExpressionEaterTests.cs" />
    <Compile Include="Helpers\MetricHelperTests.cs" />
    <Compile Include="InitializerElement\AnonymousMemberDeclarationEaterTests.cs" />
    <Compile Include="InitializerElement\ArrayInitializerEaterTests.cs" />
    <Compile Include="InitializerElement\CollectionElementInitializerEaterTests.cs" />
    <Compile Include="InitializerElement\ExpressionInitializerEaterTests.cs" />
    <Compile Include="InitializerElement\MemberInitializerEaterTests.cs" />
    <Compile Include="InitializerElement\UnsafeCodeFixedPointerInitializerEaterTests.cs" />
    <Compile Include="InitializerElement\UnsafeCodeStackAllocInitializerEaterTests.cs" />
    <Compile Include="MoqFake\MoqFakeOptionEaterTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="QueryClause\QueryContinuationEaterTests.cs" />
    <Compile Include="QueryClause\QueryFirstFromEaterTests.cs" />
    <Compile Include="QueryClause\QueryFromClauseEaterTests.cs" />
    <Compile Include="QueryClause\QueryGroupClauseEaterTests.cs" />
    <Compile Include="QueryClause\QueryJoinClauseEaterTests.cs" />
    <Compile Include="QueryClause\QueryLetClauseEaterTests.cs" />
    <Compile Include="QueryClause\QueryOrderByClauseEaterTests.cs" />
    <Compile Include="QueryClause\QueryParameterPlatformEaterTests.cs" />
    <Compile Include="QueryClause\QueryRangeVariableDeclarationEaterTests.cs" />
    <Compile Include="QueryClause\QuerySelectClauseEaterTests.cs" />
    <Compile Include="QueryClause\QueryWhereClauseEaterTests.cs" />
    <Compile Include="Statement\BlockStatementEaterTests.cs" />
    <Compile Include="Statement\DeclarationStatementEaterTests.cs" />
    <Compile Include="Statement\DoStatementEaterTests.cs" />
    <Compile Include="Statement\ExpressionStatementEaterTests.cs" />
    <Compile Include="Statement\ForeachStatementEaterTests.cs" />
    <Compile Include="Statement\ForStatementEaterTests.cs" />
    <Compile Include="Statement\GotoCaseStatementEaterTests.cs" />
    <Compile Include="Statement\IfStatementEaterTests.cs" />
    <Compile Include="Statement\LockStatementEaterTests.cs" />
    <Compile Include="Statement\ReturnStatementEaterTests.cs" />
    <Compile Include="Statement\SwitchLabelStatementEaterTests.cs" />
    <Compile Include="Statement\SwitchStatementEaterTests.cs" />
    <Compile Include="Statement\ThrowsStatementEaterTests.cs" />
    <Compile Include="Statement\TryStatementEaterTests.cs" />
    <Compile Include="Statement\UncheckedStatementEaterTests.cs" />
    <Compile Include="Statement\UnsafeCodeFixedStatementEaterTests.cs" />
    <Compile Include="Statement\UnsafeCodeUnsafeStatementEaterTests.cs" />
    <Compile Include="Statement\UsingStatementEaterTests.cs" />
    <Compile Include="Statement\WhileStatementEaterTests.cs" />
    <Compile Include="Statement\YieldStatementEaterTests.cs" />
    <Compile Include="StubTypes\IEventDeclarationAndIDeclaredElement.cs" />
    <Compile Include="StubTypes\ILambdaParameterDeclarationAndIDeclaredElement.cs" />
    <Compile Include="StubTypes\ILocalConstantAndIDeclaredElement.cs" />
    <Compile Include="StubTypes\ILocalVariableAndIDeclaredElement.cs" />
    <Compile Include="StubTypes\IUnsafeCodeFixedPointerAndIDeclaredElement.cs" />
    <Compile Include="StubTypes\IVariableDeclarationAndIDeclaredElement.cs" />
    <Compile Include="VariableDeclaration\AnonymousMethodParameterDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\CatchVariableDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\ForeachVariableDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\LambdaParameterDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\LocalConstantDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\LocalVariableDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\RegularParameterDeclarationEaterTests.cs" />
    <Compile Include="VariableDeclaration\UnsafeCodeFixedPointerDeclarationEaterTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\MockMetrics.Eating\MockMetrics.Eating.csproj">
      <Project>{d3d283eb-d36e-4d39-b698-4a3ccb7e7750}</Project>
      <Name>MockMetrics.Eating</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="MetricMeasure\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
</Project>