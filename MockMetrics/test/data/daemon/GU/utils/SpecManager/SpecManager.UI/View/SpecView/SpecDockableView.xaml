<UserControl x:Class="SpecManager.UI.View.SpecView.SpecDockableView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:specViewModel="clr-namespace:SpecManager.UI.ViewModel.SpecViewModel"
             xmlns:ctrl="clr-namespace:SpecManager.UI.View.Controls"
             xmlns:Properties="clr-namespace:SpecManager.UI.ViewModel.Behaviors"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance specViewModel:SpecDockableVm}"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SpecManager.UI;component/View/Styles/CommonStyleResourceDictionary.xaml"/>
                <ResourceDictionary Source="/SpecManager.UI;component/View/Styles/ToolBarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" MinWidth="200"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*" MinWidth="400"/>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Style="{StaticResource MainBorderStyle}">
                <TextBlock Text="{Binding SourceName}"/>
            </Border>

            <ToolBar Grid.Row="1" Grid.Column="0">
                <Button Command="{Binding AddNodeAfterCommand}" 
                        ToolTip="Добавить после"
                        Style="{StaticResource ResourceKey=miniToolBarButtonStyle}" Tag="/SpecManager.UI;component/Resources/Icons/add.png" />

                <ctrl:MenuButton Style="{StaticResource ResourceKey=miniToolBarMenuButtonStyle}" 
                                 IsEnabled="{Binding CanAddChildNode}"
                                 Tag="/SpecManager.UI;component/Resources/Icons/add_child.png" ToolTip="Добавить потомка">
                    <ctrl:MenuButton.ContextMenu>
                        <ContextMenu>
                            <ContextMenu.Items>
                                <MenuItem Header="Simple" 
                                          Command="{Binding AddSimpleChildNodeCommand}"/>
                                <MenuItem Header="Complex" 
                                          Command="{Binding AddComplexChildNodeCommand}" />
                                <MenuItem Header="ComplexChoice" 
                                          Command="{Binding AddComplexChoiseChildNodeCommand}" />
                                <MenuItem Header="RefSpec" 
                                          Command="{Binding AddRefSpecChildNodeCommand}" />
                            </ContextMenu.Items>
                        </ContextMenu>
                    </ctrl:MenuButton.ContextMenu>
                </ctrl:MenuButton>

                <Button Command="{Binding ShiftUpNodeCommand}" 
                        ToolTip="Сдвинуть вниз" 
                        Style="{StaticResource ResourceKey=miniToolBarButtonStyle}" 
                        Tag="/SpecManager.UI;component/Resources/Icons/up.png" />

                <Button Command="{Binding ShiftDownNodeCommand}" 
                        ToolTip="Сдвинуть вверх" 
                        Style="{StaticResource ResourceKey=miniToolBarButtonStyle}" 
                        Tag="/SpecManager.UI;component/Resources/Icons/down.png" />

                <Button Command="{Binding RemoveNodeCommand}" 
                        ToolTip="Удалить" 
                        Style="{StaticResource ResourceKey=miniToolBarButtonStyle}" 
                        Tag="/SpecManager.UI;component/Resources/Icons/delete.png" />
            </ToolBar>

            <TreeView x:Name="TreeView" 
                      Grid.Row="2" 
                      Grid.Column="0" 
                      ItemsSource="{Binding TreeNodeRootVm}" >

                <TreeView.InputBindings>
                    <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopySpecNodeCommand}" CommandParameter="{Binding SelectedValue, ElementName=TreeView}"/>
                    <KeyBinding Key="X" Modifiers="Control" Command="{Binding CutSpecNodeCommand}" CommandParameter="{Binding SelectedValue, ElementName=TreeView}"/>
                    <KeyBinding Key="V" Modifiers="Control" Command="{Binding PasteSpecNodeCommand}" CommandParameter="{Binding SelectedValue, ElementName=TreeView}"/>
                </TreeView.InputBindings>

                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=OneWay}" />
                        <Setter Property="AllowDrop" Value="{Binding AllowDrop, Mode=OneWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SelectTreeNodeCommand}"
                                               CommandParameter="{Binding SelectedValue, ElementName=TreeView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding ChildTreeNodeVmList}">
                        <DockPanel>
                            <TextBlock Text="{Binding TypeText}" DockPanel.Dock="Left" Margin="0,0,2,0">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CommonTextBlockStyle}">
                                        <Setter Property="Foreground" Value="#A0B0C0"></Setter>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBlock Text="{Binding Name}" DockPanel.Dock="Right">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CommonTextBlockStyle}">
                                        <Setter Property="Foreground" Value="Black"></Setter>
                                        <Setter Property="FontWeight" Value="Normal"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRoot}" Value="true">
                                                <Setter Property="TextDecorations" Value="Underline"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsComplex}" Value="true">
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsOptional}" Value="true">
                                                <Setter Property="Foreground" Value="SlateGray"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DockPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

        </Grid>

        <GridSplitter  Grid.Column="1" Grid.RowSpan="3" Width="5" ResizeBehavior="PreviousAndNext"></GridSplitter>

        <ContentControl Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Content="{Binding CurrentNodeView}" />
    </Grid>
</UserControl>
