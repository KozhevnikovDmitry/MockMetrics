<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:tns="urn://x-artefacts-it-ru/dob/state-services/commons/1.1"
	xmlns:hints="urn://x-artefacts-it-ru/dob/xml-editor/rendering-hints/1.3"
	targetNamespace="urn://x-artefacts-it-ru/dob/state-services/commons/1.1"
	elementFormDefault="qualified" 
	attributeFormDefault="unqualified"
	>

	<!--==========================================  Заготовки для структурированных типов  ==========================================-->

	<xs:group name="PhysicalPersonQualifiedName-ModelGroup">
		<xs:annotation><xs:documentation>ФИО физического лица.</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="FamilyName" type="tns:RussianWord-100-Type" hints:rus="Фамилия"/>
			<xs:element name="FirstName" type="tns:RussianWord-100-Type" hints:rus="Имя"/>
			<xs:element name="Patronymic" type="tns:RussianWord-100-Type" minOccurs="0" hints:rus="Отчество"/>
		</xs:sequence>
	</xs:group>
	
	<xs:group name="ApplicantPhysicalPersonQualifiedName-ModelGroup">
		<xs:annotation><xs:documentation>ФИО заявителя - физического лица.</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="FamilyName" type="tns:RussianWord-100-Type" hints:businessMeaning="userFamilyName" hints:rus="Фамилия"/>
			<xs:element name="FirstName" type="tns:RussianWord-100-Type" hints:businessMeaning="userFirstName" hints:rus="Имя"/>
			<xs:element name="Patronymic" type="tns:RussianWord-100-Type" minOccurs="0" hints:businessMeaning="userPatronymic" hints:rus="Отчество"/>
		</xs:sequence>
	</xs:group>
	
	<xs:group name="PhysicalPersonIdentificationInformation-ModelGroup">
		<xs:annotation><xs:documentation>Установочные данные физического лица: ФИО + дата и место рождения.</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:group ref="tns:PhysicalPersonQualifiedName-ModelGroup"/>
			<xs:element name="BirthDate" type="xs:date" hints:rus="Дата рождения"/>
			<xs:element name="BirthPlace" type="tns:string-500" hints:rus="Место рождения" hints:widgetTtpe="textArea"/>
		</xs:sequence>
	</xs:group>
	
	<!--==========================================  Структурированные типы  ==========================================-->
	
	<xs:complexType name="Address-Type">
		<xs:annotation>
			<xs:documentation>
				Адрес, без почтового индекса.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="KLADRCodeUpToStreet" type="tns:TimelineAwareClassifierValue-Type" hints:classifierName="region_kladr" hints:rus="Адрес до улицы включительно, из адресной картотеки"/>
			<xs:element name="ApartmentBlock" type="tns:string-10" hints:rus="Дом"/>
			<xs:element name="Bulk" type="tns:string-10" hints:rus="Корпус" minOccurs="0"/>
			<xs:element name="Building" type="tns:string-10" hints:rus="Строение" minOccurs="0"/>
			<xs:element name="Apartment" type="tns:string-10" hints:rus="Квартира" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="PostalAddress-Type">
		<xs:annotation>
			<xs:documentation>
				Адрес, без почтового индекса.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PostalCode" type="tns:SixDigitString-Type" minOccurs="0" hints:rus="Почтовый индекс"/>
			<xs:element name="KLADRCodeUpToStreet" type="tns:TimelineAwareClassifierValue-Type" hints:classifierName="region_kladr" hints:rus="Адрес до улицы включительно"/>
			<xs:element name="ApartmentBlock" type="tns:string-10" hints:rus="Дом"/>
			<xs:element name="Building" type="tns:string-10" hints:rus="Корпус" minOccurs="0"/>
			<xs:element name="Housing" type="tns:string-10" hints:rus="Строение" minOccurs="0"/>
			<xs:element name="Apartment" type="tns:string-10" hints:rus="Квартира" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>

	
	<xs:complexType name="TimelineAwareClassifierValue-Type">
		<xs:annotation>
			<xs:documentation>
				Справочное значение для справочников, зависящих от времени. 
				Зависимость от времени может выражаться в следующем:
				1. Текст, соответствующий коду справочного значения, меняется со временем, 
				   и эти изменения юридически значимы, т.е. при показе документа нужно показать
				   текст, соответствующий конкретному моменту времени.
				2. Справочное значение может быть объявлено устаревшим, а его код передан 
				   другому справочному значению. Пример - КЛАДР.
				   
				N.B. У элемента этого типа должен быть задан атрибут hints:classifierName.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="relevanceDate" type="xs:date" hints:speciallyTreatedDataItem="classifierValueRelevanceDate"/>
			<xs:sequence maxOccurs="unbounded">
				<xs:element name="code" type="tns:string-50" hints:speciallyTreatedDataItem="classifierCode"/>
				<xs:element name="displayText" type="tns:string-500" hints:speciallyTreatedDataItem="classifierDisplayText"/>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="TimelineUnawareClassifierValue-Type">
		<xs:annotation>
			<xs:documentation>
				Справочное значение для справочников, не зависящих от времени. 
				   
				N.B. У элемента этого типа должен быть задан атрибут hints:classifierName.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:sequence maxOccurs="unbounded">
				<xs:element name="code" type="tns:string-50" hints:speciallyTreatedDataItem="classifierCode"/>
				<xs:element name="displayText" type="tns:string-500" hints:speciallyTreatedDataItem="classifierDisplayText"/>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>
	
	
	<!--==========================================  Простые типы  ==========================================-->
	
	
	<xs:simpleType name="YesNo-Type">
		<xs:annotation><xs:documentation>Аналог типа boolean.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Да"/>
			<xs:enumeration value="Нет"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="Gender-Type">
		<xs:annotation><xs:documentation>Пол.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Мужской"/>
			<xs:enumeration value="Женский"/>
		</xs:restriction>
	</xs:simpleType>
		
	<xs:simpleType name="RussianWord-200-Type" hints:userHint="Только русские буквы, до 200 символов">
		<xs:annotation><xs:documentation>Русский текст, длиной до 200 символов. Например, имя или фамилия.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="200"/>
			<xs:pattern value="[а-яА-ЯёЁ\-\s]+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="RussianWord-100-Type" hints:userHint="Только русские буквы, до 100 символов">
		<xs:annotation><xs:documentation>Русский текст, длиной до 100 символов. Например, имя или фамилия.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="100"/>
			<xs:pattern value="[а-яА-ЯёЁ\-\s]+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="PhoneNumberRF-Type" hints:userHint="Номер телефона, 10 знаков. Пример: +7 391 1234567." hints:inputMask="+7 ([N][N][N]) [N][N][N] [N][N] [N][N]">
		<xs:annotation><xs:documentation>Номер телефона в РФ, в десятизначном формате</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
			<xs:pattern value="[0-9]{10}"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="FourDigitString-Type" hints:userHint="Четыре цифры" hints:inputMask="[N][N][N][N]">
		<xs:annotation><xs:documentation>Строка, состоящая из четырёх цифр. Например серия паспорта РФ.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="4"/>
			<xs:pattern value="\d{4}"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="SovietStyleDocumentSeries-Type" hints:userHint="Две латинские цифры, тире и две русские буквы. Пример: IV-ЮС." hints:inputMask="[L][L][S][R][R]">
		<xs:annotation><xs:documentation>Серии документов, таких как свидетельства о рождении, советские паспорта, и т.д.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="5"/>
			<xs:pattern value="[IVXLCDM]{2}[\-][А-Я]{2}"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="SixDigitString-Type" hints:userHint="Шесть цифр" hints:inputMask="[N][N][N][N][N][N]">
		<xs:annotation><xs:documentation>Строка, состоящая из шести цифр. Например номер паспорта РФ.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="6"/>
			<xs:pattern value="\d{6}"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="LegalPersonINN-Type" hints:userHint="Десять цифр" hints:inputMask="[N][N][N][N][N][N][N][N][N][N]">
		<xs:annotation><xs:documentation>ИНН юридического лица</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="10"/>
			<xs:pattern value="\d{10}"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="PhysicalPersonINN-Type" hints:userHint="Двенадцать цифр" hints:inputMask="[N][N][N][N][N][N][N][N][N][N][N][N]">
		<xs:annotation><xs:documentation>ИНН физического лица</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="12"/>
			<xs:pattern value="\d{12}"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-500">
		<xs:restriction base="xs:string">
			<xs:maxLength value="500"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-300">
		<xs:restriction base="xs:string">
			<xs:maxLength value="300"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-200">
		<xs:restriction base="xs:string">
			<xs:maxLength value="200"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-100">
		<xs:restriction base="xs:string">
			<xs:maxLength value="100"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-50">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-20">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-10">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-6">
		<xs:restriction base="xs:string">
			<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="string-4">
		<xs:restriction base="xs:string">
			<xs:maxLength value="4"/>
		</xs:restriction>
	</xs:simpleType>
	
</xs:schema>
