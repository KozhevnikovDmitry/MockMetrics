<UserControl x:Class="GU.UI.View.ContentView.ComplexContentNodeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:contentView="clr-namespace:GU.UI.View.ContentView"
             xmlns:prop="clr-namespace:Common.UI.ViewModel.Attachables.Properties;assembly=Common.UI"
             xmlns:ValueConverters="clr-namespace:Common.UI.ViewModel.ValueConverters;assembly=Common.UI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>
        <Style TargetType="ListView">

        </Style>

        <ValueConverters:BoolVisibilityConverter x:Key="boolVisibilityconverter"/>
        
        <Style TargetType="{x:Type Button}" x:Key="listButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="DataContext" Value="{Binding}"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        
        <Style TargetType="{x:Type ListViewItem}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    
    <Expander IsExpanded="True">
        <Expander.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="{Binding Name}"
                           Grid.Column="0"
                           FontWeight="Bold" 
                           MaxWidth="600"
                           TextWrapping="Wrap"/>


                <Button Grid.Column="1" VerticalAlignment="Top"
                        Style="{StaticResource listButtonStyle}" 
                        Visibility="{Binding CanAddCopy, Converter={StaticResource boolVisibilityconverter}}" 
                        Command="{Binding AddCopyCommand}">
                    <Image Source="/Common.UI;component/Resources/Icons/16X16/add.png" Width="16" Height="16" />
                </Button>

                <Button Grid.Column="2" VerticalAlignment="Top"
                        Style="{StaticResource listButtonStyle}" 
                        Visibility="{Binding CanDelete, Converter={StaticResource boolVisibilityconverter}}" 
                        Command="{Binding DeleteCommand}">
                    <Image Source="/Common.UI;component/Resources/Icons/16X16/delete.png"  Width="16" Height="16"/>
                </Button>
            </Grid>
        </Expander.Header>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ListView ItemsSource="{Binding ContentNodeVmList}" Grid.Row="0" 
                      BorderThickness="0"
                      Margin="20,2,2,2"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                      ScrollViewer.CanContentScroll="False"
                      HorizontalContentAlignment="Stretch"
                      SelectionMode="Single" 
                      KeyboardNavigation.TabNavigation="Cycle"
                      prop:IgnoreMouseWheelBehavior.IsMouseWheelIgnored="True">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <contentView:ContentNodeView DataContext="{Binding}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                </ListView.Resources>
            </ListView>
        </Grid>
    </Expander>
</UserControl>
