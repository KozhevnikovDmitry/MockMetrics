<!--Набор стилей для элементов usercontrol'а диалога-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                 
                     xmlns:extk="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended"
                     xmlns:vib="clr-namespace:VIBlend.WPF.Controls;assembly=VIBlend.WPF.Editors"
                     xmlns:sys="clr-namespace:System;assembly=mscorlib"
                     xmlns:ValueConverters="clr-namespace:Common.UI.ViewModel.ValueConverters"
                     xmlns:Properties="clr-namespace:Common.UI.ViewModel.Attachables.Properties"
                     xmlns:Behaviors="clr-namespace:Common.UI.ViewModel.Attachables.Behaviors">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CommonStyleResourceDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <ValueConverters:TrueFalseConverter x:Key="trueFalseConverter"/>
    <ValueConverters:AndBoolConverter x:Key="andBoolConverter"/>

    <Style TargetType="Button" x:Key="BrowseButtonStyle" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="0,2,2,2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Content" Value="..."/>
        <Setter Property="Grid.Column" Value="2"/>
    </Style>
    
    <Style TargetType="TextBox">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="IsReadOnly" 
                Value="{Binding IsEditable, Converter={StaticResource ResourceKey=trueFalseConverter}}"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:BindInputControlBehavior/>
                    <Behaviors:TabSelectionTextBoxBehavior/>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTipService.ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="extk:MaskedTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="SelectAllOnGotFocus" Value="False"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="extk:DecimalUpDown">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="SelectAllOnGotFocus" Value="False"/>
        <Setter Property="IsEditable" Value="{Binding IsEditable}"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="extk:IntegerUpDown">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="SelectAllOnGotFocus" Value="False"/>
        <Setter Property="IsEditable" Value="{Binding IsEditable}"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="vib:MaskEditor" BasedOn="{StaticResource {x:Type TextBoxBase}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="IsReadOnly" 
                Value="{Binding IsEditable, Converter={StaticResource ResourceKey=trueFalseConverter}}"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:BindInputMaskEditorBehavior/>
                    <Behaviors:TabSelectionTextBoxBehavior/>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="vib:NumberEditor" BasedOn="{StaticResource {x:Type TextBoxBase}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="IsReadOnly" 
                Value="{Binding IsEditable, Converter={StaticResource ResourceKey=trueFalseConverter}}"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:TabSelectionTextBoxBehavior/>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="PasswordChar" Value="*"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource dodgerHighlightedComboBoxStyle}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditable}"/>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:BindInputComboBoxBehavior/>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="addressComboBoxStyle" BasedOn="{StaticResource dodgerHighlightedComboBoxStyle}">
        <Setter Property="Grid.Column" Value="1"/>        
        <Setter Property="SelectedValuePath" Value="Id"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="IsEnabled">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource andBoolConverter}">
                    <Binding Path="IsCustomAddress" Mode="OneWay" Converter="{StaticResource trueFalseConverter}"></Binding>
                    <Binding Path="IsEditable" Mode="OneWay"></Binding>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:BindInputComboBoxBehavior/>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditable}"/>
    </Style>
    
    <!--Для DatePicker'а пришлось перегрузить целиком дефолтовый стайл ради нормального отображения кастомных DatePicker'ов при IsEnabled=False
        идея попёрт отсюда: http://stackoverflow.com/questions/5019524/wpf-datepickertextbox-change-font-color-opacity-when-isenabled-false -->
    
    <Style TargetType="{x:Type DatePicker}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>

            </Trigger>
        </Style.Triggers>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="IsEnabled" Value="{Binding IsEditable}"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="ToolTipService.Placement" Value="Right"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>    
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>

                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                            <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                            </ColorAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*"/>
                                                    <ColumnDefinition Width="20*"/>
                                                    <ColumnDefinition Width="20*"/>
                                                    <ColumnDefinition Width="20*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*"/>
                                                    <RowDefinition Height="19*"/>
                                                    <RowDefinition Height="19*"/>
                                                    <RowDefinition Height="19*"/>
                                                </Grid.RowDefinitions>
                                                <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                                <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                                <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                            <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                            <GradientStop Color="#FF4084BD"/>
                                                            <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                    <Rectangle.Stroke>
                                                        <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                            <GradientStop Color="#FF494949"/>
                                                            <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Stroke>
                                                </Rectangle>
                                                <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                                <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                                <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                                <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch"/>
                                <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--Собственно хак, который позволяет избежать излишней мутности даты при IsEnabled=False. Меняем Fill на Transparent
                                    идея попёрт отсюда: http://stackoverflow.com/questions/5019524/wpf-datepickertextbox-change-font-color-opacity-when-isenabled-false-->
                                    <Rectangle Grid.Column="0" Fill="Transparent" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border x:Name="ValidationErrorElement" Grid.Column="0" BorderThickness="1" CornerRadius="1" BorderBrush="#FFDB000C" Visibility="Collapsed">                            
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Properties:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Properties:StylizedBehaviorCollection>
                    <Behaviors:MaskedPromtDatePickerBehavior/>
                    <Behaviors:ErrorToolTipStyleBehavior/>
                </Properties:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="IsEnabled" Value="{Binding IsEditable}"/>
    </Style>
    
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="Grid.Column" Value="0"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
</ResourceDictionary>