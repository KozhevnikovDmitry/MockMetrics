<UserControl x:Class="Common.UI.View.SearchView.SearchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"     
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:SearchView="clr-namespace:Common.UI.View.SearchView"
             xmlns:valueConverters="clr-namespace:Common.UI.ViewModel.ValueConverters"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" MinHeight="480" MinWidth="640" >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding DefaultSearchCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=templateTabControl, Path=SelectedValue}"/>
    </UserControl.InputBindings>
    <UserControl.Resources>   
        
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Common.UI;component/View/Styles/AnimatedExpanderStylesDictionary.xaml" />
                <ResourceDictionary Source="/Common.UI;component/View/Styles/DialogViewResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="TextBlock" x:Key="verticalTextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="TextBlock.LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}" Style="{StaticResource ResourceKey=verticalTextBlock}"></TextBlock>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Content" Value="{Binding View}"/>
            </Style>

            <Style TargetType="{x:Type ListBoxItem}" x:Key="ResultListContainerStyle">
                <Setter Property="ContentTemplateSelector" Value="{Binding ResultItemTemplateSelector}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <DataTemplate x:Key="LoadedListTemplate" DataType="ListBox">
                <ListBox x:Name="resultListBox"
                    ItemContainerStyle="{StaticResource ResultListContainerStyle}"                   
                    ItemsSource="{Binding ResultItemsVMList}"                    
                    SelectionMode="Single">
                    <ListBox.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    </ListBox.Resources>
                    <ListBox.InputBindings>
                        <KeyBinding Command="{Binding ChooseItemCommand}" CommandParameter="{Binding ElementName=resultListBox, Path=SelectedValue}" Key="Enter"></KeyBinding>
                    </ListBox.InputBindings>
                </ListBox>
            </DataTemplate>

            <DataTemplate x:Key="LoadingProgressingTemplate">
                <Border >
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="Загрузка..." Margin="5" HorizontalAlignment="Center"></TextBlock>
                        <ProgressBar Width="150" Height="14" Margin="5" HorizontalAlignment="Center" IsIndeterminate="True"></ProgressBar>
                        <Button Content="Отмена операции" Margin="5" HorizontalAlignment="Center" Command="{Binding CancelOperationCommand}"></Button>
                    </StackPanel>
                </Border>
            </DataTemplate>

            <Style TargetType="{x:Type ContentControl}" x:Key="LoadingContainerStyle" BasedOn="{StaticResource {x:Type ContentControl}}" >
                <Setter Property="ContentTemplate" Value="{StaticResource LoadedListTemplate}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsLoadingProgressing}"  Value="True">
                        <Setter Property="ContentTemplate" Value="{StaticResource LoadingProgressingTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <valueConverters:BoolVisibilityConverter x:Key="boolVisibilityConverter" />

        </ResourceDictionary>

    </UserControl.Resources>

        <DockPanel Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

            <Expander IsExpanded="{Binding IsSearchOpenned}" ExpandDirection="Right"  Margin="-1" Width="Auto"
                      Style="{StaticResource ResourceKey=ExpanderStyle1}"  
                      DockPanel.Dock="Left">                
                <Expander.Header>
                    <TextBlock Text="Поиск" RenderTransformOrigin="0.5,0.5" 
                       Margin="0,0,0,0" Width="Auto" 
                       Style="{StaticResource ResourceKey=verticalTextBlock}"></TextBlock>
                </Expander.Header>

            <Grid VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TabControl TabStripPlacement="Top" Grid.Row="0" VerticalAlignment="Top" SelectedIndex="{Binding SelectedIndex}"
                            Visibility="{Binding ElementName=searchButton, Path=IsEnabled, 
                                                 Converter={StaticResource boolVisibilityConverter}, 
                                                 ConverterParameter=Collapsed}">
                    <TabItem Visibility="{Binding IsTemplatedSearchAvailable, Converter={StaticResource boolVisibilityConverter}, ConverterParameter=Collapsed}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="GotFocus">
                                <i:InvokeCommandAction Command="{Binding SetTemplatedModeCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TabItem.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="Шаблонный поиск"/>
                            </DataTemplate>
                        </TabItem.HeaderTemplate>
                        <TabControl x:Name="templateTabControl" TabStripPlacement="Left" ItemsSource="{Binding SearchTemplateVMs}"  IsSynchronizedWithCurrentItem="True"/>
                    </TabItem>
                    <TabItem Visibility="{Binding IsCustomSearchAvailable, Converter={StaticResource boolVisibilityConverter}, ConverterParameter=Collapsed}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="GotFocus">
                                <i:InvokeCommandAction Command="{Binding SetCustomModeCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TabItem.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="Раширенный поиск"/>
                            </DataTemplate>
                        </TabItem.HeaderTemplate>
                        <SearchView:SearchPresetView DataContext="{Binding SearchPresetVM}"></SearchView:SearchPresetView>
                    </TabItem>
                </TabControl>

                <Button Content="Поиск" x:Name="searchButton"
                        VerticalAlignment="Top" 
                        HorizontalAlignment="Center" 
                        Margin="5" 
                        Width="150" 
                        Height="40" 
                        FontSize="14" 
                        Grid.Row="1"
                        Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=templateTabControl, Path=SelectedValue}"></Button>
            </Grid>
                               
            </Expander>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ContentControl  Content="{Binding}" Style="{StaticResource LoadingContainerStyle}" Grid.Row="0"></ContentControl>

                <DockPanel HorizontalAlignment="Center" Grid.Row="1">
                    <Button Content="Пред." Margin="5" Width="100" Height="23" FontSize="12"
                                Command="{Binding SearchPreviousPageCommand}"></Button>

                    <TextBlock Margin="5" Text="{Binding SearchResultInfo}" FontSize="14" ></TextBlock>

                    <Button Content="След." Margin="5" Width="100" Height="23" FontSize="12" 
                                Command="{Binding SearchNextPageCommand}"></Button>

                </DockPanel>
            </Grid>
        </DockPanel>
</UserControl>

